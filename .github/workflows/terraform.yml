name: Terraform CI

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main

permissions:
  contents: read
  id-token: write
  pull-requests: write
  issues: write

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Verify AWS Credentials
        run: aws sts get-caller-identity

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.0
        
      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate
      
      - name: Setup tf-summarize
        uses: kishaningithub/setup-tf-summarize@v2

      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        id: plan
        shell: bash
        run: |
          set -x

          terraform plan -out=tfplan -no-color -input=false
          terraform show -json tfplan | tf-summarize > tfplan_summary.md
          echo "SUMMARY=$(cat tfplan_summary.md)" >> $GITHUB_OUTPUT
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Upload Plan Summary
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const issue_number = context.payload.pull_request.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const commentIdentifier = '<!-- tf-summarize-comment -->';
            const summary = process.env.SUMMARY || 'No changes detected.';

            const commentBody = `
            #### Terraform Plan Summary ðŸ“–
            <details><summary>Show Summary</summary>

            ${summary}

            </details>
            *Generated by tf-summarize, Action: \`${{ github.event_name }}\`*${commentIdentifier}
            `;

            // Fetch existing comments
            const comments = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number,
            });

            // Find existing bot comment with identifier
            const botComment = comments.data.find(comment =>
              comment.body.includes(commentIdentifier)
            );

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner,
                repo,
                comment_id: botComment.id,
                body: commentBody,
              });
              console.log('Updated existing comment');
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number,
                body: commentBody,
              });
              console.log('Created new comment');
            }
        env:
          SUMMARY: ${{ steps.summarize.outputs.SUMMARY }}

      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Wait and Destroy
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          sleep 300
          terraform destroy -auto-approve

      - name: Cleanup Terraform lock in S3 on cancellation
        if: always() && cancelled() || failure()
        run: |
          aws s3 rm s3://viet-terraform/vpc-lab/terraform.tfstate.tflock
          
